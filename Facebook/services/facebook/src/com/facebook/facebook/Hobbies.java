/*Copyright (c) 2023-2024 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.facebook.facebook;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Hobbies generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`hobbies`", uniqueConstraints = {
            @UniqueConstraint(name = "`UK_hobbies_user_id_hobbie_id`", columnNames = {"`user_id`", "`hobbie_id`"})})
public class Hobbies implements Serializable {

    private Integer id;
    private Integer userId;
    private Integer hobbieId;
    private HobbieType hobbieType;
    private Users users;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`user_id`", nullable = true, scale = 0, precision = 10)
    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    @Column(name = "`hobbie_id`", nullable = true, scale = 0, precision = 10)
    public Integer getHobbieId() {
        return this.hobbieId;
    }

    public void setHobbieId(Integer hobbieId) {
        this.hobbieId = hobbieId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`hobbie_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_hobbies_TO_hobbie_typVB4xo`"))
    @Fetch(FetchMode.JOIN)
    public HobbieType getHobbieType() {
        return this.hobbieType;
    }

    public void setHobbieType(HobbieType hobbieType) {
        if(hobbieType != null) {
            this.hobbieId = hobbieType.getId();
        }

        this.hobbieType = hobbieType;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`user_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_hobbies_TO_users_userc9htC`"))
    @Fetch(FetchMode.JOIN)
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        if(users != null) {
            this.userId = users.getId();
        }

        this.users = users;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Hobbies)) return false;
        final Hobbies hobbies = (Hobbies) o;
        return Objects.equals(getId(), hobbies.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}
/*Copyright (c) 2023-2024 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.facebook.facebook;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Users generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`users`", uniqueConstraints = {
            @UniqueConstraint(name = "`email`", columnNames = {"`email`"}),
            @UniqueConstraint(name = "`ph_no`", columnNames = {"`ph_no`"})})
public class Users implements Serializable {

    private Integer id;
    private String fname;
    private String lname;
    private Date dob;
    private Integer genderId;
    private String phNo;
    private String email;
    private String passcode;
    private String profileImage;
    private String coverImage;
    private String bio;
    private String websiteLink;
    private Integer relationshipStatusId;
    private Gender gender;
    private RelationshipStatus relationshipStatus;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`fname`", nullable = false, length = 30)
    public String getFname() {
        return this.fname;
    }

    public void setFname(String fname) {
        this.fname = fname;
    }

    @Column(name = "`lname`", nullable = true, length = 30)
    public String getLname() {
        return this.lname;
    }

    public void setLname(String lname) {
        this.lname = lname;
    }

    @Column(name = "`dob`", nullable = true)
    public Date getDob() {
        return this.dob;
    }

    public void setDob(Date dob) {
        this.dob = dob;
    }

    @Column(name = "`gender_id`", nullable = true, scale = 0, precision = 10)
    public Integer getGenderId() {
        return this.genderId;
    }

    public void setGenderId(Integer genderId) {
        this.genderId = genderId;
    }

    @Column(name = "`ph_no`", nullable = true, length = 30)
    public String getPhNo() {
        return this.phNo;
    }

    public void setPhNo(String phNo) {
        this.phNo = phNo;
    }

    @Column(name = "`email`", nullable = false, length = 40)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "`passcode`", nullable = false, length = 255)
    public String getPasscode() {
        return this.passcode;
    }

    public void setPasscode(String passcode) {
        this.passcode = passcode;
    }

    @Column(name = "`profile_image`", nullable = true, length = 2048)
    public String getProfileImage() {
        return this.profileImage;
    }

    public void setProfileImage(String profileImage) {
        this.profileImage = profileImage;
    }

    @Column(name = "`cover_image`", nullable = true, length = 2048)
    public String getCoverImage() {
        return this.coverImage;
    }

    public void setCoverImage(String coverImage) {
        this.coverImage = coverImage;
    }

    @Column(name = "`bio`", nullable = true, length = 110)
    public String getBio() {
        return this.bio;
    }

    public void setBio(String bio) {
        this.bio = bio;
    }

    @Column(name = "`website_link`", nullable = true, length = 30)
    public String getWebsiteLink() {
        return this.websiteLink;
    }

    public void setWebsiteLink(String websiteLink) {
        this.websiteLink = websiteLink;
    }

    @Column(name = "`relationship_status_id`", nullable = true, scale = 0, precision = 10)
    public Integer getRelationshipStatusId() {
        return this.relationshipStatusId;
    }

    public void setRelationshipStatusId(Integer relationshipStatusId) {
        this.relationshipStatusId = relationshipStatusId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`gender_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`gender_fk`"))
    @Fetch(FetchMode.JOIN)
    public Gender getGender() {
        return this.gender;
    }

    public void setGender(Gender gender) {
        if(gender != null) {
            this.genderId = gender.getId();
        }

        this.gender = gender;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`relationship_status_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`users_ibfk_1`"))
    @Fetch(FetchMode.JOIN)
    public RelationshipStatus getRelationshipStatus() {
        return this.relationshipStatus;
    }

    public void setRelationshipStatus(RelationshipStatus relationshipStatus) {
        if(relationshipStatus != null) {
            this.relationshipStatusId = relationshipStatus.getId();
        }

        this.relationshipStatus = relationshipStatus;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Users)) return false;
        final Users users = (Users) o;
        return Objects.equals(getId(), users.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}
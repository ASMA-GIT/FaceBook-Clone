/*Copyright (c) 2023-2024 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.facebook.facebook;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Education generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`education`")
public class Education implements Serializable {

    private Integer id;
    private Integer userId;
    private String collageName;
    private short fromYear;
    private Short toYear;
    private Integer educationTypeId;
    private Users users;
    private EducationType educationType;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`id`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`user_id`", nullable = true, scale = 0, precision = 10)
    public Integer getUserId() {
        return this.userId;
    }

    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    @Column(name = "`collage_name`", nullable = true, length = 40)
    public String getCollageName() {
        return this.collageName;
    }

    public void setCollageName(String collageName) {
        this.collageName = collageName;
    }

    @Column(name = "`from_year`", nullable = false, scale = 0, precision = 5)
    public short getFromYear() {
        return this.fromYear;
    }

    public void setFromYear(short fromYear) {
        this.fromYear = fromYear;
    }

    @Column(name = "`to_year`", nullable = true, scale = 0, precision = 4)
    public Short getToYear() {
        return this.toYear;
    }

    public void setToYear(Short toYear) {
        this.toYear = toYear;
    }

    @Column(name = "`education_type_id`", nullable = true, scale = 0, precision = 10)
    public Integer getEducationTypeId() {
        return this.educationTypeId;
    }

    public void setEducationTypeId(Integer educationTypeId) {
        this.educationTypeId = educationTypeId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`user_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`education_ibfk_1`"))
    @Fetch(FetchMode.JOIN)
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        if(users != null) {
            this.userId = users.getId();
        }

        this.users = users;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`education_type_id`", referencedColumnName = "`id`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`education_ibfk_2`"))
    @Fetch(FetchMode.JOIN)
    public EducationType getEducationType() {
        return this.educationType;
    }

    public void setEducationType(EducationType educationType) {
        if(educationType != null) {
            this.educationTypeId = educationType.getId();
        }

        this.educationType = educationType;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Education)) return false;
        final Education education = (Education) o;
        return Objects.equals(getId(), education.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}